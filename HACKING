## Kernel
### Disable debug symbols
```
scripts/config --undefine GDB_SCRIPTS
scripts/config --undefine DEBUG_INFO
scripts/config --undefine DEBUG_INFO_SPLIT
scripts/config --undefine DEBUG_INFO_REDUCED
scripts/config --undefine DEBUG_INFO_COMPRESSED
scripts/config --set-val  DEBUG_INFO_NONE       y
scripts/config --set-val  DEBUG_INFO_DWARF5     n
scripts/config --disable DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT
```

### Generate a fragment
```
./scripts/diffconfig -m .config_old .config_new
```

### Merge kernel fragments
```
./scripts/kconfig/merge_config.sh -O . ./buildernet/kernel/configs/*
```

### Convert raw to vhd
From https://learn.microsoft.com/en-us/azure/virtual-machines/linux/create-upload-generic#general-linux-installation-notes
```
rawdisk="buildernet.raw"
vhddisk="buildernet.vhd"
MB=$((1024*1024))
size=$(qemu-img info -f raw --output json "$rawdisk" | jq -r '."virtual-size"')
rounded_size=$(((($size+$MB-1)/$MB)*$MB))
qemu-img resize -f raw $rawdisk $rounded_size
qemu-img convert -f raw -o subformat=fixed,force_size -O vpc $rawdisk $vhddisk
```

# Run a VM with Autologin=yes console and SW TPM
```
mkdir /tmp/emulated_tpm
swtpm socket --tpmstate dir=/tmp/emulated_tpm --ctrl type=unixio,path=/tmp/emulated_tpm/swtpm-sock --log level=20 --tpm2 -d
qemu-system-x86_64 \
  -drive if=pflash,format=raw,readonly=on,file=/usr/share/OVMF/OVMF_CODE_4M.fd \
  -drive if=pflash,format=raw,readonly=on,file=/usr/share/OVMF/OVMF_VARS_4M.fd \
  -drive format=raw,if=none,cache=none,id=osdisk,file=./buildernet.raw \
  -device nvme,drive=osdisk,serial=nvme-os,bootindex=0 \
  -enable-kvm -cpu host -m 4G -smp 8 -nographic \
  -device virtio-scsi-pci,id=scsi0 \
  -drive file=./persistent.raw,format=raw,if=none,id=datadisk \
  -device nvme,id=nvme0,serial=nvme-data \
  -device nvme-ns,drive=datadisk,bus=nvme0,nsid=12 \
  -nic user,model=virtio-net-pci,hostfwd=tcp:127.0.0.1:2223-:22 \
  -chardev socket,id=chrtpm,path=/tmp/emulated_tpm/swtpm-sock \
  -tpmdev emulator,id=tpm0,chardev=chrtpm \
  -device tpm-tis,tpmdev=tpm0 -chardev socket,id=hvc0,path=/tmp/hvc0.sock,server,nowait \
  -device virtio-serial-pci \
  -device virtconsole,chardev=hvc0,name=org.qemu.console
```

then connect with
```
socat -,raw,echo=0 UNIX-CONNECT:/tmp/hvc0.sock
```

# Vector Prometheus labels relabeling
Check out:
- https://github.com/search?q=%22type%3A+prometheus_scrape%22+AND+%22transforms%22&type=code
- https://github.com/medic/helm-charts/blob/688c448b51cd8a31204b24561a09d13f206c6e2a/charts/observability/values.yaml#L219
- https://github.com/deepflowio/deepflow/blob/bb6ee75bc7b9ad2f737cd0e6118059c5326abf8c/server/agent_config/README.md?plain=1#L6335

# apt inside debug image
If you're getting an error like this
```
apt install cryptsetup
Error: Could not open lock file /var/lib/dpkg/lock-frontend - open (2: No such file or directory)
Error: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), are you root?
```
then run
```
rm -f /var/lib/apt/lists/lock /var/lib/dpkg/lock*
dpkg --configure -a
```

DO NOT RUN `apt update`!
