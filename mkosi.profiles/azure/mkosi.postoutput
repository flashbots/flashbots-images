#!/bin/bash
set -euxo pipefail

OUTPUT="tdx-debian"
EFI_FILE="${OUTPUTDIR}/${OUTPUT}.efi"
VHD_FILE="${OUTPUTDIR}/${OUTPUT}.vhd"
WORK_DIR="${OUTPUTDIR}/azure-tmp"

if [ ! -f "$EFI_FILE" ]; then
    echo "Error: EFI file not found at $EFI_FILE"
    exit 1
fi

echo "Converting $EFI_FILE to VHD format..."

# Create working directory
mkdir -p "$WORK_DIR"

# Create ESP filesystem image (500MB should be plenty)
ESP_SIZE_MB=500
ESP_IMAGE="$WORK_DIR/esp.img"

# Create empty ESP image and format it as FAT32
dd if=/dev/zero of="$ESP_IMAGE" bs=1M count=$ESP_SIZE_MB
mformat -i "$ESP_IMAGE" -F -v "ESP" ::

# Create EFI directory structure and copy the UKI file using mtools
mmd -i "$ESP_IMAGE" ::EFI
mmd -i "$ESP_IMAGE" ::EFI/BOOT
mcopy -i "$ESP_IMAGE" "$EFI_FILE" ::EFI/BOOT/BOOTX64.EFI

# Create the final disk image with GPT
DISK_SIZE_MB=$((ESP_SIZE_MB + 2))  # ESP + 1MB for GPT headers
DISK_IMAGE="$WORK_DIR/azure_image.raw"

# Create empty disk
dd if=/dev/zero of="$DISK_IMAGE" bs=1M count=$DISK_SIZE_MB

# Create GPT partition table and ESP partition
# Use sector size of 512 bytes, so 1MB = 2048 sectors
parted "$DISK_IMAGE" --script -- \
  mklabel gpt \
  mkpart ESP fat32 2048s $(($ESP_SIZE_MB * 2048 + 2047))s \
  set 1 boot on

# Copy the ESP filesystem into the partition
# Skip first 1MB (2048 sectors) to account for GPT header
dd if="$ESP_IMAGE" of="$DISK_IMAGE" bs=512 seek=2048 conv=notrunc

# Convert to VHD
truncate -s %1MiB "$DISK_IMAGE"
qemu-img convert -O vpc -o subformat=fixed,force_size "$DISK_IMAGE" "$VHD_FILE"

# Clean up
rm -rf "$WORK_DIR"

echo "Successfully created VHD: $VHD_FILE"
